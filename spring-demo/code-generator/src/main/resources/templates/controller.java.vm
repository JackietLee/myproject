package ${package.Controller};


import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import org.springframework.web.bind.annotation.*;

import javax.annotation.Resource;
import java.util.List;

import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.fs.zhnm.edge.cloud.parent.common.result.RetResponse;
import com.fs.zhnm.edge.cloud.parent.common.result.RetResult;
import lombok.extern.slf4j.Slf4j;
import com.baomidou.mybatisplus.core.metadata.IPage;
import ${package.Service}.${table.serviceName};
import ${package.Entity}.${entity};
#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@RestController
@RequestMapping("/#if(${controllerMappingHyphenStyle})${table.entityPath}#else${table.entityPath}#end")
public class ${table.controllerName} {

    @Resource
    private ${table.serviceName} ${table.entityPath}Service;

    /**
     * 查询所有接口
     * @return
     */
    @GetMapping
    public RetResult<List<${entity}>> list(){
        return RetResponse.success(${table.entityPath}Service.list());
    }

    /**
     * 根据id查询数据接口
     * @param id
     * @return
     */
    @GetMapping("/{id}")
    public RetResult<${entity}> getById(@PathVariable Integer id){
        return RetResponse.success(${table.entityPath}Service.getById(id));
    }

    /**
     * 分页查询接口
     * @param pageNum
     * @param pageSize
     * @return
     */
    @GetMapping("/page")
    public RetResult<IPage<${entity}>> page(@RequestParam Integer pageNum,@RequestParam Integer pageSize){
        QueryWrapper<${entity}> queryWrapper=new QueryWrapper<${entity}>();
        return RetResponse.success(${table.entityPath}Service.page(new Page<${entity}>(pageNum,pageSize),queryWrapper));
    }

    /**
     * 新增和更新接口
     * @param ${table.entityPath}
     * @return
     */
    @PostMapping
    public RetResult<${entity}> saveOrUpdate(@RequestBody ${entity} ${table.entityPath}){
        ${table.entityPath}Service.saveOrUpdate(${table.entityPath});
        return RetResponse.success(${table.entityPath});
    }
    /**
     * 删除接口
     * @param id
     * @return
     */
    @PostMapping("/del/{id}")
    public RetResult<Boolean> delete(@PathVariable Integer id){
        return RetResponse.success(${table.entityPath}Service.removeById(id));
    }
    /**
     * 批量删除接口
     * @param ids
     * @return
     */
    @PostMapping("/del/batch")
    public RetResult<Boolean> deleteBatch(@RequestBody List<Integer> ids){
        return RetResponse.success(${table.entityPath}Service.removeByIds(ids));
    }

}